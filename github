//github
Create and use a repository
Start and manage a new branch
Make changes to a file and push them to GitHub as commits
Open and merge a pull request

STEP 2. CREATE A BRANCH 
in the upper right corner, next to your avatar or identicon
click and then select New repository.
Name your repository hello-world.
Write a short description.
Select Initialize this repository with a README. 
Click Create Repository

STEP 2. CREATE A BRANCH
Branching is the way to work on different versions of a repository at one time.

By default your repository has one branch named master
Use branches to experiment and make edits before committing them to master.

When you create a branch off the master branch, you’re making a copy, of master as it was at that point in time.
If someone else made changes to the master branch while you were working on your branch, you could pull in those updates.

This diagram shows:

The master branch
A new branch called feature (because we’re doing ‘feature work’ on this branch)
The journey that feature takes before it’s merged into master
Branches accomplish similar goals in GitHub repositories.

Use branches for keeping bug fixes and feature work separate from our master (production) branch.
When a change is ready, they merge their branch into master.

To create a new branch:
Go to your new repository hello-world.
Click the drop down at the top of the file list that says branch: master.
Type a branch name, readme-edits, into the new branch text box.
Select the blue Create branch box or hit “Enter” on your keyboard.
Now you have two branches, master and readme-edits. They look exactly the same, but not for long! Next we’ll add our changes to the new branch.

STEP 3. MAKE AND COMMIT CHANGES
On GitHub, saved changes are called commits. 
Each commit has an associated commit message, which is a description explaining why a particular change was made.
Commit messages capture the history of your changes, so other contributors can understand what you’ve done and why.
Make and commit changes

Edit the README.md file. 

Click the pencil icon in the upper right corner of the file view to edit.
In the editor, change the text
Write a commit message that describes your changes.
Click Commit changes button.

Step 4. Open a Pull Request
Now that you have changes in a branch off of master, you can open a pull request.
Pull Requests are the heart of collaboration on GitHub. When you open a pull request, you’re proposing your changes and requesting that someone review and pull in your contribution and merge them into their branch. Pull requests show diffs, or differences, of the content from both branches. The changes, additions, and subtractions are shown in green and red.

As soon as you make a commit, you can open a pull request and start a discussion, even before the code is finished.
By using GitHub’s @mention system in your pull request message, 
you can ask for feedback from specific people or teams, whether they’re down the hall or 10 time zones away.

You can even open pull requests in your own repository and merge them yourself. It’s a great way to learn the GitHub Flow before working on larger projects.
Open a Pull Request for changes to the README


STEP 5. Merge your Pull Request

Merge your readme-edits branch into the master branch.
Click the green Merge pull request button to merge the changes into master.
Click Confirm merge.
Delete the branch, since its changes have been incorporated, with the Delete branch button in the purple box.
