/git-cmds

/**git Initialization
git init    //creates .git directory
git add     //add src files to index
git reset   //remove src files from index
git commit  //add src file to HEAD
git status  //indexed

//** stage files for commit
git add <file|dir>        //add src files to index
$ git add .               //select all files
$ git add -A              //add all files/dir for commit
$ git add *.c             //select files
$ git reset	              //remove everything staged
$ git reset fname         //remove fname from commit ready 
$ git status	            //Lists modified (red), (green)files
$ git commit              //equiv of check-in files
$ git commit -a -m "mycomment"
$ git commit --amend      //
$ git commit -a           //auto add modified tracked files
$ git log                 //list commits, hashes


//**get status
git ls-files    //list tracked files
git diff        //compare workdir w/index
git diff--cached//compare workdir w/index
git tag         //list tags
gitk            //graphical tools
git difftool


//git log obtains the hash for each commit
git tag {mytag} {hash}      
..  git tag           //lists tags
..  git tag v1.0      //tags most recent commit
..  git tag v1.0 1b2e1d63ff   //tag hash=1b2e1d63ff

git checkout <F>	//F=file->workdir
git checkout <B>	//B=branch->workdir
..	git checkout master

git checkout -b B	//workdir<-B=new branch
..	git checkout -b version1

git branch			//list branches
gir branch -r		//list remote branches
//**branching cmds
// Let v1 = name of a new branch
git branch					//lists branches
git branch v1				//create branch v1
git checkout v1			//copy v1 to workdir
		or
git branch -b v1	//create & checkout v1	
	//do some work
	//must commit before change back to master
	//stash if you can't commit yet
git commit -a -m "created v1"
git checkout master	//
	//modify master until ready
	//or merge v1 now
git merge v1

git branch -d version1		//delete branch
git branch -D version1		//delete override branch


